drop table bancos cascade constraints;
drop table sucursales cascade constraints;
drop table CUENTAS cascade constraints;
drop table MOVIMIENTOS Cascade constraints;

Create TABLE   BANCOS(
COD_BANCO   NUMBER(4) PRIMARY KEY,
NF_BANCO    VARCHAR2(10),
NOMBRE_BANC VARCHAR2(30),
DOM_FISCAL  VARCHAR(35),
POBLACION   VARCHAR(35)
);

Create TABLE  SUCURSALES(
COD_BANCO   NUMBER(4) REFERENCES BANCOS,
COD_SUCUR   NUMBER (4),
NOMBRE_SUC  VARCHAR2(35),
DIREC_SUC   VARCHAR2(35),
LOC_SUC     VARCHAR2(20),
PROV_SUC    VARCHAR2(20),
PRIMARY KEY (COD_BANCO,COD_SUCUR)
);	

Create TABLE   CUENTAS(
COD_BANCO   NUMBER(4),
COD_SUCUR   NUMBER(4),
NUM_CTA     NUMBER(10) ,
FECHA_ALTA  DATE,
NOMBRE_CTA  VARCHAR2(35),
DIREC_CTA   VARCHAR2(35),
POBLA_CTA   VARCHAR2(20),
SALDO_DEBE  NUMBER(10),
SALDO_HABER NUMBER(10),
PRIMARY KEY (COD_BANCO,COD_SUCUR,NUM_CTA),
FOREIGN KEY (COD_BANCO,COD_SUCUR) REFERENCES SUCURSALES
);

CREATE TABLE  MOVIMIENTOS(
COD_BANCO   NUMBER(4),
COD_SUCUR   NUMBER(4),
NUM_CTA     NUMBER(10), 
FECHA_MOV   DATE,
TIPO_MOV    CHAR(1), 
IMPORTE     NUMBER(10),
PRIMARY KEY (COD_BANCO,COD_SUCUR,NUM_CTA,FECHA_MOV),
FOREIGN KEY (COD_BANCO,COD_SUCUR, NUM_CTA) REFERENCES CUENTAS ON DELETE CASCADE
);

INSERT INTO BANCOS VALUES(1111,'122322223','BANCO DE ESPAÑA','GRAN VIA','MADRID');
INSERT INTO BANCOS VALUES(1112,'222322223','BANCO DE GUADALAJARA','MAYOR', 
					'GUADALAJARA');
INSERT INTO BANCOS VALUES(1113,'322322223','BANCO POPULAR','LA PLAZA','TOLEDO');
INSERT INTO BANCOS VALUES(1114,'422322223','CAJA CM','RIO DULCE','ALBACETE');

INSERT INTO sucursales VALUES(1111, 5000,'* SUCURSAL 1*', 'ANCHA 24', 
	'TOLEDO','TOLEDO');
INSERT INTO sucursales VALUES(1111, 5001,'* SUCURSAL 2*', 'PILON 33',
 'PASTRANA','GUADALAJARA');

INSERT INTO sucursales VALUES(1112, 6000,'* SUCURSAL 6000*', 'MAYOR 55',
 'ALCALA','ALCALA');

INSERT INTO sucursales VALUES(1113, 4000,'* SUCURSAL 4000*', 'ERAS 77',
 'ARANJUEZ','MADRID');

INSERT INTO CUENTAS VALUES(1111, 5000,123456789,SYSDATE -7, 'JUAN','TOLEDO',
		'TOLEDO', 0,0);
INSERT INTO CUENTAS VALUES(1111, 5000,123456788,SYSDATE -6, 'PEDRO','TOLEDO',
		'TOLEDO', 0,0);
INSERT INTO CUENTAS VALUES(1111, 5001,123456787,SYSDATE -100, 'ANA','GUADALAJARA',
		'GUADALAJARA', 0,0);
INSERT INTO CUENTAS VALUES(1111, 5001,123456786,SYSDATE -6, 'MANUEL','GUADALAJARA',
		'GUADALAJARA', 0,0);

INSERT INTO CUENTAS VALUES(1111, 5001,123456785,SYSDATE -230, 'ANDRES','ALCALA',
		'ALCALA', 0,0);

INSERT INTO CUENTAS VALUES(1112, 6000,33334444, SYSDATE,'ISABEL','MADRID', 
		'MADRID', 0,0);
INSERT INTO CUENTAS VALUES(1112, 6000,33334440, SYSDATE-140,'MARIA','MADRID', 
		'MADRID', 0,0);


INSERT INTO MOVIMIENTOS VALUES(1112, 6000,33334444, SYSDATE-0.001,'I', 1000); 
INSERT INTO MOVIMIENTOS VALUES(1112, 6000,33334444, SYSDATE-1,'I', 2000); 
INSERT INTO MOVIMIENTOS VALUES(1112, 6000,33334444, SYSDATE-2,'R', 100); 
INSERT INTO MOVIMIENTOS VALUES(1112, 6000,33334444, SYSDATE,'R', 5000); 

INSERT INTO MOVIMIENTOS VALUES(1112, 6000,33334440, SYSDATE,'R',200);
INSERT INTO MOVIMIENTOS VALUES(1112, 6000,33334440, SYSDATE-2,'I',200);


INSERT INTO MOVIMIENTOS VALUES(1111, 5000,123456789,SYSDATE -7, 'I',100);
INSERT INTO MOVIMIENTOS VALUES(1111, 5000,123456789,SYSDATE -5, 'R',200);
INSERT INTO MOVIMIENTOS VALUES(1111, 5000,123456789,SYSDATE -4, 'I',300);

INSERT INTO MOVIMIENTOS VALUES(1111, 5000,123456788,SYSDATE,'I',200);

INSERT INTO MOVIMIENTOS VALUES(1111, 5001,123456787,SYSDATE, 'R',198);

INSERT INTO MOVIMIENTOS VALUES(1111, 5001,123456786,SYSDATE,'I',998);

Commit;

UPDATE  CUENTAS C SET SALDO_DEBE  = (SELECT SUM(IMPORTE) FROM MOVIMIENTOS
WHERE TIPO_MOV='R' AND C.COD_BANCO= COD_BANCO AND C.COD_SUCUR=COD_SUCUR
AND C.NUM_CTA =NUM_CTA);

UPDATE  CUENTAS C SET SALDO_HABER  = (SELECT SUM(IMPORTE) FROM MOVIMIENTOS
WHERE TIPO_MOV='I' AND C.COD_BANCO= COD_BANCO AND C.COD_SUCUR=COD_SUCUR
AND C.NUM_CTA =NUM_CTA);

UPDATE  CUENTAS SET SALDO_DEBE =0 WHERE SALDO_DEBE IS NULL;
UPDATE  CUENTAS SET SALDO_HABER=0 WHERE SALDO_HABER IS NULL;

COMMIT;

/* a. Obtén el banco con más sucursales. Los datos a obtener son: 
      nombre banco y número sucursales. */
SELECT * FROM BANCOS;
SELECT * FROM SUCURSALES;
SELECT * FROM CUENTAS;
SELECT * FROM MOVIMIENTOS;

SELECT B.NOMBRE_BANC "NOMBRE BANCO", COUNT(S.COD_SUCUR) "Nº SUCURSALES"
FROM SUCURSALES S
INNER JOIN BANCOS B ON S.COD_BANCO = B.COD_BANCO 
GROUP BY B.NOMBRE_BANC
HAVING COUNT(S.COD_SUCUR) = (SELECT MAX(COUNT(COD_SUCUR))
                             FROM SUCURSALES
                             GROUP BY COD_BANCO);

/* b. El saldo actual de los bancos de 'GUADALAJARA', 1 fila por cada banco.
      
      AMPLIACIÓN: Muestra el saldo debe y el saldo haber para todos los bancos. 
      Si un banco no tiene cuentas aparecerá con saldo 0. */
      
SELECT B.NOMBRE_BANC "NOMBRE BANCO", SUM(C.SALDO_DEBE) "SALDO DEBE",
    SUM(C.SALDO_HABER) "SALDO HABER"
FROM CUENTAS C
INNER JOIN BANCOS B ON C.COD_BANCO = B.COD_BANCO
WHERE B.POBLACION = 'GUADALAJARA'
GROUP BY B.NOMBRE_BANC;

SELECT B.NOMBRE_BANC "NOMBRE BANCO", SUM(NVL(C.SALDO_DEBE,0)) "SALDO DEBE",
    SUM(NVL(C.SALDO_HABER,0)) "SALDO HABER"
FROM CUENTAS C
RIGHT JOIN BANCOS B ON C.COD_BANCO = B.COD_BANCO
GROUP BY B.NOMBRE_BANC;

/* c. Datos de la cuenta o cuentas con más movimientos. */
SELECT C.NOMBRE_CTA "NOMBRE CTA", COUNT(*) "Nº MOVIMIENTOS"
FROM CUENTAS C
INNER JOIN MOVIMIENTOS M ON C.NUM_CTA = M.NUM_CTA
GROUP BY C.NOMBRE_CTA
HAVING COUNT(*) = (SELECT MAX(COUNT(*))
                   FROM MOVIMIENTOS
                   GROUP BY NUM_CTA);

/* d. El nombre de la sucursal que haya tenido más suma de reintegros. */
SELECT S.NOMBRE_SUC "NOMBRE SUCURSAL", SUM(M.IMPORTE) "SUMA REINTEGROS"
FROM MOVIMIENTOS M
INNER JOIN SUCURSALES S ON M.COD_SUCUR = S.COD_SUCUR
WHERE TIPO_MOV = 'R'
GROUP BY S.NOMBRE_SUC
HAVING SUM(M.IMPORTE) = (SELECT MAX(SUM(IMPORTE))
                         FROM MOVIMIENTOS
                         WHERE TIPO_MOV = 'R'
                         GROUP BY COD_SUCUR);